<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project xmlns:con="http://eviware.com/soapui/config" id="033feb77-a66f-4d3e-9249-bb89f00f21d1" created="3.47.0" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="Coreinvent Assets Service API" authProfile="No Authorization" resourceRoot="" compositeProjectFormat="1.3" projectVersion="" updated="3.47.0">
  <con:description>Documentacion actualizada para la API del servicio Coreinvent Assets Service</con:description>
  <con:settings>
    <con:setting id="033feb77-a66f-4d3e-9249-bb89f00f21d1fileName">Coreinvent-Assets-Service-API-readyapi-project</con:setting>
  </con:settings>
  <con:requirements/>
  <con:properties>
    <con:property>
      <con:name>baseUrl</con:name>
      <con:value>https://assets-service.coreinvent.es/</con:value>
    </con:property>
    <con:property>
      <con:name>token</con:name>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer>
    <con:oAuth2Profile>
      <con:name>Tokenn</con:name>
      <con:type>OAuth 2.0</con:type>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:manualAccessTokenExpirationTime/>
      <con:manualAccessTokenExpirationTimeUnit>SECONDS</con:manualAccessTokenExpirationTimeUnit>
      <con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow>
      <con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod>
      <con:jwtConfiguration/>
      <con:responseType>id_token</con:responseType>
    </con:oAuth2Profile>
    <con:oAuth2Profile>
      <con:name>TOKENNNNN</con:name>
      <con:type>OAuth 2.0</con:type>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:oAuth2Flow>JWT_GRANT</con:oAuth2Flow>
      <con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod>
      <con:jwtConfiguration/>
      <con:responseType>id_token</con:responseType>
    </con:oAuth2Profile>
  </con:oAuth2ProfileContainer>
  <con:oAuth1ProfileContainer>
    <con:oAuth1Profile>
      <con:name>Token</con:name>
      <con:type>OAuth 1.0</con:type>
      <con:authorizationURI>https://assets-service.coreinvent.es/api/security/login</con:authorizationURI>
      <con:accessTokenURI>https://assets-service.coreinvent.es/api/security/login</con:accessTokenURI>
      <con:redirectURI>https://assets-service.coreinvent.es/</con:redirectURI>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:accessTokenStatus>RETRIEVAL_CANCELED</con:accessTokenStatus>
      <con:temporaryTokenURI>https://assets-service.coreinvent.es/api/security/login</con:temporaryTokenURI>
      <con:consumerKey>javier.manzanera@coresolutions.es</con:consumerKey>
      <con:consumerSecret>Secret.,.123</con:consumerSecret>
    </con:oAuth1Profile>
  </con:oAuth1ProfileContainer>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository>
    <con:oAuth20AuthEntry>
      <con:name>Tokenn</con:name>
      <con:type>OAuth 2.0</con:type>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:manualAccessTokenExpirationTime/>
      <con:manualAccessTokenExpirationTimeUnit>SECONDS</con:manualAccessTokenExpirationTimeUnit>
      <con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow>
      <con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod>
      <con:jwtConfiguration/>
      <con:responseType>id_token</con:responseType>
    </con:oAuth20AuthEntry>
    <con:oAuth20AuthEntry>
      <con:name>TOKENNNNN</con:name>
      <con:type>OAuth 2.0</con:type>
      <con:accessToken>${#Project#token}</con:accessToken>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus>
      <con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus>
      <con:oAuth2Flow>JWT_GRANT</con:oAuth2Flow>
      <con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod>
      <con:jwtConfiguration/>
      <con:responseType>id_token</con:responseType>
    </con:oAuth20AuthEntry>
    <con:oAuth10AuthEntry>
      <con:name>Token</con:name>
      <con:type>OAuth 1.0</con:type>
      <con:authorizationURI>https://assets-service.coreinvent.es/api/security/login</con:authorizationURI>
      <con:accessTokenURI>https://assets-service.coreinvent.es/api/security/login</con:accessTokenURI>
      <con:redirectURI>https://assets-service.coreinvent.es/</con:redirectURI>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:accessTokenStatus>RETRIEVAL_CANCELED</con:accessTokenStatus>
      <con:temporaryTokenURI>https://assets-service.coreinvent.es/api/security/login</con:temporaryTokenURI>
      <con:consumerKey>javier.manzanera@coresolutions.es</con:consumerKey>
      <con:consumerSecret>Secret.,.123</con:consumerSecret>
    </con:oAuth10AuthEntry>
  </con:authRepository>
  <con:tags/>
</con:soapui-project>
